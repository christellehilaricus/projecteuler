/* Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal numbers are
 * all figurate (polygonal) numbers and are generated by the following formulae:
 * 
 * Triangle	 	P3,n=n(n+1)/2	 	1, 3, 6, 10, 15, ...
 * Square	 	P4,n=n^2 	        1, 4, 9, 16, 25, ...
 * Pentagonal	 	P5,n=n(3n-1)/2	 	1, 5, 12, 22, 35, ...
 * Hexagonal	 	P6,n=n(2n-1)	 	1, 6, 15, 28, 45, ...
 * Heptagonal	 	P7,n=n(5n-3)/2	 	1, 7, 18, 34, 55, ...
 * Octagonal	 	P8,n=n(3n-2)	 	1, 8, 21, 40, 65, ...
 * 
 * The ordered set of three 4-digit numbers: 8128, 2882, 8281, has three interesting
 * properties.
 * The set is cyclic, in that the last two digits of each number is the first two
 * digits of the next number (including the last number with the first).
 * Each polygonal type: triangle (P3,127=8128), square (P4,91=8281), and pentagonal
 * (P5,44=2882), is represented by a different number in the set.
 * This is the only set of 4-digit numbers with this property.
 * Find the sum of the only ordered set of six cyclic 4-digit numbers for which each
 * polygonal type: triangle, square, pentagonal, hexagonal, heptagonal,
 * and octagonal, is represented by a different number in the set. */

function triangle(n){
  return n*(n+1)/2;
}

function square(n){
  return n*n;
}

function pentagonal(n){
  return n*(3*n-1)/2;
}

function hexagonal(n){
  return n*(2*n-1);
}

function heptagonal(n){
  return n*(5*n-3)/2;
}

function octagonal(n){
  return n*(3*n-2);
}

function prb61(){
  var octs = [],
      heps = [],
      hexs = [],
      pens = [],
      squs = [],
      tris = [];

  // octagonal(19) = 1045
  // octagonal(58) = 9976
  for(var n = 19; n < 59; n++)
    octs.push(octagonal(n));

  // heptagonal(21) = 1071
  // heptagonal(63) = 9828
  for(var n = 21; n < 64; n++)
    heps.push(heptagonal(n));
 
  // hexagonal(23) = 1035
  // hexagonal(70) = 9730
  for(var n = 23; n < 71; n++)
    hexs.push(hexagonal(n));
 
  // pentagonal(26) = 1001
  // pentagonal(81) = 9801
  for(var n = 26; n < 82; n++)
    pens.push(pentagonal(n));
 
  // square(32) = 1032
  // square(99) = 9801
  for(var n = 32; n < 100; n++)
    squs.push(square(n));
 
  // triangle(45) = 1035
  // triangle(140) = 9870
  for(var n = 45; n < 141; n++)
    tris.push(triangle(n));

  var matchNumber = function(x,y){
    var temp = x.toString().substr(2,2);
    if(temp[0]!='0'){
      if(temp == y.toString().substr(0,2)){
        return true;
      }
    }
    return false;
  }
/*

for(var i = 0; i < octs.length; i++){
  var attempt = [];
  attempt.push(octs[i]);
  for(var j = 0; j < heps.length; j++){
    if(matchNumber(octs[i],heps[j])){
      attempt.push(heps[j]);
      for(var k = 0; k < hexs.length; k++){
        if(matchNumber(heps[j],hexs[k])){
          attempt.push(hexs[k]);
        }
      }
    }
  }
  if(attempt.length<2){
    for(var j = 0; j < hexs.length; j++){
      if(matchNumber(octs[i],hexs[j])){
        attempt.push(hexs[j]);
        for(var k = 0; k < heps.length; k++){
          if(matchNumber(hexs[j],heps[k])){
            attempt.push(heps[k]);
          }
        }
      }
    }
  }
  if(attempt.length==3)
    console.log(attempt);
}
*/

  return true;
}
